[
{"code": "CS 511", "title": "Topics in Computer Graphics", "description": "Covers advanced topics in computer graphics. The exact course contents may change based on recent advances in the area and the instructor teaching it. Possible topics include: Geometric modeling, Subdivision surfaces, Procedural modeling, Warping and morphing, Model reconstruction, Image based rendering, Lighting and appearance, Texturing, Natural phenomena, Nonphotorealistic rendering Particle systems, Character animation, Physically based modeling and animation.", "prerequisites": "Prerequisite(s): CS 411 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 512", "title": "Computer Vision", "description": "Introduction to fundamental topics in computer vision and the application of deep neural networks to this area. Intended to give the student a good basis for work in this important field. Topics include: Geometric image formation, Feature extraction, Object recognition, Object detection, Semantic segmentation, Probabilistic modeling, Camera calibration, Epipolar geometry, Model reconstruction, Optical flow, Motion estimation.", "prerequisites": "Prerequisite(s): CS 584", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 513", "title": "Geospatial Vision and Visualization", "description": "Geospatial information has become ubiquitous in everyday life as evidenced by on-line mapping services such as NOKIA Here Map, Microsoft Bing Map, the \"place\" features on social network websites such as Facebook, and navigation apps on smart phones.  Behind the scenes is digital map content engineering that enables all types of location-based services.  Course material will be drawn from the instructor's research and development experience at NOKIA Location and Commerce (formerly NAVTEQ), the Chicago-based leading global provider of digital map, traffic, and location data.  This course will provide a comprehensive treatment of computer vision, image processing and visualization techniques in the context of digital mapping, global positioning and sensing, next generation map making, and three-dimensional map content creations.  Real world problems and data and on-site industry visits will comprise part of the course curriculum.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 520", "title": "Data Integration, Warehousing, and Provenance", "description": "This course introduces the basic concepts of data integration, data warehousing, and provenance.  We will learn how to resolve structural heterogeneity through schema matching and mapping.  The course introduces techniques for querying several heterogeneous datasources at once (data integration) and translating data between databases with different data representations (data exchange).  Furthermore, we will cover the data-warehouse paradigm including the Extract-Transform-Load (ETL) process, the data cube model and its relational representations (such as snowflake and star schema), and efficient processing of analytical queries.  This will be contrasted with Big Data analytics approaches that (besides other differences) significantly reduce the upfront cost of analytics.  When feeding data through complex processing pipelines such as data exchange transformations or ETL workflows, it is easy to lose track of the origin of data. Therefore, in the last part of the course we cover techniques for representing and keeping track of the origin and creation process of data (its provenance).\n\nThe course emphasizespractical skills through a series of homework assignments that help students develop a strong background in data integration systems and techniques.  At the same time, it also addresses the underlying formalisms.  For example, we will discuss the logic based languages used for schema mapping and the dimensional data model as well as their practical application (e.g., developing an ETL workflow with rapid miner and creating a mapping between two example schemata).  The literature reviews will familiarize students with data integration and provenance research.", "prerequisites": "Prerequisite(s): CS 425 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 521", "title": "Object-Oriented Analysis and Design", "description": "This course describes a methodology that covers a wide range of software engineering techniques used in system analysis, modeling and design. These techniques integrate well with software process management techniques and provide a framework for software engineers to collaborate in the design and development process. The methodology features the integration of concepts, including software reusability, frame works, design patterns, software architecture, software component design, use-case analysis, event-flow analysis, event-message analysis, behavioral-life cycle analysis, feature, multiple-product, risk and rule analysis, and automatic code generation. (Credit will not be given for CS 521 if CS751 is taken)", "prerequisites": "Prerequisite(s): CS 445 with min. grade of C or CS 487 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 522", "title": "Advanced Data Mining", "description": "Continued exploration of data mining algorithms. More sophisticated algorithms such as support vector machines will be studied in detail. Students will continuously study new contributions to the field. A large project will be required that encourages students to push the limits of existing data mining techniques.", "prerequisites": "Prerequisite(s): CS 422 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 525", "title": "Advanced Database Organization", "description": "Comprehensive coverage of the problems involved in database system implementation and an in-depth examination of contemporary structures and techniques used in modern database management systems. Teaches advanced skills appropriate for DBMS architects and developers , database specialist, and the designers and developers of client/server and distributed systems. Focus is on transaction management, database structures and distributed processing.", "prerequisites": "Prerequisite(s): CS 425 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 527", "title": "Software Security", "description": "From traditional PCs, mobile devices to IoT devices, software is literally ubiquitous in our everyday life. That is why the study of software security has become essential for defeating malware, preserving user privacy and protecting (intellectual and financial) properties. In this graduate-level research-oriented course, we will explore a variety of topics, including both classic and cutting-edge topics, in the area of software security. The goal of this course is to introduce basic concepts as well as state-of-the-art techniques in this area, and let students gain hands-on experience by applying some of these techniques to solve real-world security problems.", "prerequisites": "Prerequisite(s): CS 450*, An asterisk (*) designates a course which may be taken concurrently.", "lecture": "Lecture: 37", "lab": "Lab: 8", "credits": "Credits: 3"},
{"code": "CS 528", "title": "Data Privacy and Security", "description": "New technologies have increasingly enabled corporations and governments to collect, analyze and share huge amount of data related to individuals. Today, the challenge is enabling the legitimate use of the collected data without violating privacy and security. In this course, we are going to analyze the fundamental models of ensuring data privacy and security, and explore potential theoretical models, algorithms, and technologies that can enhance data privacy and security in different contexts, such as market basket, search engine, location-based services, social network, cloud computing, cryptocurrencies, and smart grid. We will also design and implement different techniques (e.g., cryptographic protocols, secure computation, and data sanitization) as well as examine their performance in terms of three critical properties (privacy/security, utility and efficiency).", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 529", "title": "Information Retrieval", "description": "The course covers the advanced topics in Information Retrieval. The topics such as Summarization, cross-lingual, Meta-Search, Question Answering, Parallel and distributed IR systems are discussed. The students get involved in research ideas, and get involved in individual and group projects.", "prerequisites": "Prerequisite(s): CS 429 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 530", "title": "Theory of Computation", "description": "Computability topics such as Turing machines, nondeterministic machines, undecidability, and reducibility. Computational complexity topics such as time complexity, NP-completeness and intractability, time and space hierarchy theorems. Introduces the complexity classes P, NP, NL, L, PSPACE, NC, RNC, BPP and their complete problems.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 531", "title": "Topics in Automata Theory", "description": "Topics selected from mathematical systems and automata theory, decision problems, realization and minimization, algebraic decomposition theory and machines in a category.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 532", "title": "Formal Languages", "description": "This course provides an introduction to the theory of formal languages and machines. Topics to be covered include: strings, alphabets, and languages; grammars, the Chomsky Hierarchy of languages and corresponding machines (regular sets and finite automata, context free languages of various types, Turing machines and recursive functions, undecidable problems), and computational complexity, polynomial-time reductions, NP-completeness.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 533", "title": "Computational Geometry", "description": "This course covers fundamental algorithms and data structures for convex hulls, Voronoi diagrams, Delauney triangulation, Euclidean spanning trees, point location, and range searching. Also included are lower bounds and discrepancy theory. Optimization in geometry will be covered. This includes fixed dimensional linear programming and shortest paths. Graphic data structures such as BSP trees will be covered.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 534", "title": "Types and Programming Languages", "description": "Many useful features of modern programming languages, such as anonymous functions (lambdas), generics, and ownership, have arisen out of research into the fundamentals of programming languages. This course will introduce students to those fundamentals: students will learn the tools and techniques used by programming languages researchers to model programs, type systems, and the design choices made in the creation of programming languages. There will be a particular focus on type systems, which provide many programming languages with a certain guarantee of runtime safety: usually that type errors will not occur at runtime, but more advanced type systems can guarantee information security, data-race-freedom and many other desirable properties. Students will see how type systems are designed, and how these safety properties of typed programs are proven. The course will also explore some applications of type systems in modern programming language research and practice.", "prerequisites": "Prerequisite(s): CS 440", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 535", "title": "Design and Analysis of Algorithms", "description": "Design of efficient algorithms for a variety of problems, with mathematical proof of correctness and analysis of time and space requirements. Topics include lower bounds for sorting and medians, amortized analysis of advanced data structures, graph algorithms (strongly connected components, shortest paths, minimum spanning trees, maximum flows and bipartite matching) and NP-Completeness.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 536", "title": "Science of Programming", "description": "Formal specification of how programs execute operational semantics , how mathematical functions programs compute denotational semantics , and how to use logic to characterize properties and invariants of the program execution (axiomatic semantics).", "prerequisites": "Prerequisite(s): CS 331 with min. grade of C or CS 401 with min. grade of C or CSSP 401", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 537", "title": "Software Metrics", "description": "Theoretical foundations for software metrics. Data collection. Experimental design and analysis. Software metric validation. Measuring the software development and maintenance process. Measuring software systems. Support for metrics. Statistical tools. Setting up a measurement program. Application of software measurement.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 538", "title": "Combinatorial Optimization", "description": "Linear programs and their properties. Efficient algorithms for linear programming. Network flows, minimum cost flows, maximum matching, weighted matching, matroids.Prerequisite:CS 430 and a linear algebra course.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 539", "title": "Game Theory:  Algorithms and Applications", "description": "This course focuses on computational issues in the theory of games, economics, and network design.  Interest in the algorithmic aspects of games is motivated by the computational issues of fundamental aspects of games and economic theory, e.g. Nash equilibrium and market equilibrium.  Computing and approximating Nash equilibrium will be studied.  Of considerable interest to the computer science community are problems that arise from the Internet and computer networks and are similar to issues that arise in traditional transport networks, e.g. Wardrop equilibrium.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C or CS 530 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 540", "title": "Syntactic Analysis of Programming Languages", "description": "Formal definition of syntax with emphasis on context-free languages. Elementary techniques for scanning and parsing programming languages. Symbol table management. Semantic routines and code generation. The class will write a simple translator.", "prerequisites": "Prerequisite(s): CS 440 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 541", "title": "Topics in Compiler Construction", "description": "Advanced topics in compiler construction, including incremental and interactive compiling, error correction, code optimization, models of code generators, etc. The objective of the course is to provide an in-depth coverage of compiler optimization techniques, including both classical optimization and areas of current interest in compiler research.", "prerequisites": "Prerequisite(s): CS 440 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 542", "title": "Computer Networks I:  Fundamentals", "description": "This course focuses on the engineering and analysis of network protocols and architecture in terms of the Internet. Topics include content distribution, peer-to-peer networking, congestion control, unicast and multicast routing, router design, mobility, multimedia networking quality of service, security and policy-based networking.", "prerequisites": "Prerequisite(s): CS 455 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 543", "title": "Software-Defined Networking", "description": "Many important services—including Internet services many of us use—operate over networks that support reconfigurable, fine-grained processing of traffic, and are said to be \"software-deﬁned\". Software-Deﬁned Networks (SDNs) enable the deployment of larger and richer network services, but they also introduce new technical challenges. This course provides an overview of SDN concepts and techniques. It will teach practical skills for SDN engineering, and will prepare students for careers in designing and operating different kinds of networks.", "prerequisites": "Prerequisite(s): CS 450", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 544", "title": "Computer Networks II: Network Services", "description": "Qualitative and quantitative analysis of networks. A combination of analytical and experimental analysis techniques will be used to study topics such as protocol delay, end-to-end network response time, intranet models, Internet traffic models, web services availability, and network management.", "prerequisites": "Prerequisite(s): CS 542 with min. grade of C or ECE 545 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 545", "title": "Distributed Computing Landscape", "description": "Introduction to the theory of concurrent programming languages. Topics include formal models of concurrent computation such as process algebras, nets, and actors; high-level concurrent programming languages and their operational semantics; and methods for reasoning about correctness and complexity of concurrent programs.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 546", "title": "Parallel and Distributed Processing", "description": "This course covers general issues of parallel and distributed processing from a user's point of view which includes system architectures, programming, performance evaluation, applications, and the influence of communication and parallelism on algorithm design.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C and CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 547", "title": "Wireless Networking", "description": "This course introduces cellular/PCS systems, short-range mobile wireless systems, fixed wireless systems, satellites, and ad hoc wireless systems.  It explains in detail the underlying technology as well as regulations, politics, and business of these wireless communications systems.  It looks beyond the hype, examining just what is and is not possible with present-day and future wireless systems.  As an advanced graduate course, it will combine extensive reading and in-class discussion of the research literature with in-depth independent research projects of students' own choosing.", "prerequisites": "Prerequisite(s): CS 455 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 548", "title": "High-Speed Networks", "description": "The course studies the architectures, interfaces, protocols, technologies, products and services for broadband (high-speed) multimedia networks. The key principles of the protocols and technologies used for representative network elements and types of broadband network are studied. Specifically, cable modems, Digital Subscriber Lines, Power Lines, wireless 802.16 (WiMax), and broadband cellular Internet are covered for broadband access; for broadband Local Area Networks (LANs), Gigabit Ethernet, Virtual LANs and wireless LANs (802.11 WiFi and Bluetooth) are discussed; for broadband Wide Area Networks (WANs) the topics covered include optical networks (SONET/SDH,DWDM, optical network nodes, optical network nodes, optical switching technologies), frame-relay, ATM, wire-speed routers, IP switching, and MPLS. Also, quality of service issues in broadband networks and a view of the convergence of technologies in broadband networks are covered.", "prerequisites": "Prerequisite(s): CS 455 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 549", "title": "Cryptography", "description": "Cryptography provides foundations for ensuring the confidentiality, authenticity, integrity and privacy of the increasing sensitive information in digital world.  It\nis a theoretical field that relies on a diverse and wide variety of mathematics.  The topics in this course include encryption, message authentication codes, digital signatures, public key crypto-systems, key exchange, identification protocols, zero-knowledge proof systems, etc.  The goal of this course is to help students develop a solid understanding of the fundamentals of security and become familiar with the theories of cryptography as well as the role of cryptography in the recent and emerging applications.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 550", "title": "Advanced Operating Systems", "description": "Advanced operating system design concepts such as interprocess communication, distributed processing, replication and consistency, fault tolerance, synchronization, file systems.  Study of systems highlighting these concepts.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 551", "title": "Operating System Design and Implementation", "description": "This course covers in detail the design and implementation of processes, interprocess communication, semaphores, monitors, message passing, scheduling algorithm, input/output, device drivers, memory management, file system design, security and protection mechanisms.  The hardware-software interface and the user process-system call-kernel interface are examined in detail.  Students modify and extend a multiuser operating system.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 552", "title": "Distributed Real-Time Systems", "description": "With the advancement of computer hardware, embedded devices, and network technology, real-time applications have become pervasive, ranging from smart automobiles to automated traffic control.  Different from general-purpose applications, correct executions of real-time applications depend on both functional correctness and temporal correctness.  This course is to study the fundamentals of distributed real-time computing with the focus on its temporal aspects.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 553", "title": "Cloud Computing", "description": "This course is a tour through various topics and technologies related to cloud computing.  Students will explore solutions and learn design principles for building large network-based systems to support both compute-intensive and data-intensive applications across geographically distributed infrastructure.  Topics include resource management, programming models, application models, system characterizations, and implementations.  Discussions will often be grounded in the context of deployed cloud computing systems such as Amazon EC2 and S3, Microsoft Azure, Google AppEngine, Eucalyptus, Nimbus, OpenStack, Google's MapReduce, Yahoo's Hadoop, Microsoft's Dryad, Sphere/Sector, and many other systems.  The course involves lectures, outside invited speakers, discussions of research papers, programming assignments, and a major project (including both a written report and an oral presentation).", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C or CS 455 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 554", "title": "Data-Intensive Computing", "description": "This course is a tour through various research topics in distributed data-intensive computing, covering topics in cluster computing, grid computing, supercomputing, and cloud computing.  The course will explore solutions and learn design principles for building large network-based computational systems to support data-intensive computing.  This course is geared for junior/senior-level undergraduates and graduate students in computer science.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 555", "title": "Analytic Models and Simulation of Computer Systems", "description": "Analytic and simulation techniques for the performance analysis of computer architecture, operating systems and communication networks. Rigorous development of queuing models. Study of simulation languages and models.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 556", "title": "Cyber-Physical Systems:  Languages and Systems", "description": "Different from general-purpose and traditional computer applications, cyber-physical systems have both continuous and discrete components, hence requiring new methodologies to integrate traditional continuous control theory/systems with traditional discrete software systems.  The focus of this course is to discuss and understand the challenges in emerging cyber-physical systems and to explore possible solutions from the perspectives of systems specification, system modeling, programming languages, systems designs, and software engineering.  This course will focus on the languages and systems aspects of cyber-physical systems.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 557", "title": "Cyber-Physical Systems Security and Design", "description": "In this course, we will examine the security and privacy issues in the vast implementations of Cyber-physical systems (CPS). According to the definition, CPS refers to a system that has both physical and software components, and they are all controlled or monitored by computer-based algorithms. CPS, or IoT systems touch many aspects of life, including transportation, health care, safety, environment, energy, and more. We will examine how existing security mechanisms can be applied to the CPS system, why such protections are not enough, and study the trend of security system design in the area. In addition, we will examine and discuss CPS/IoT technology and market specific topics, relevant case studies of system security vulnerabilities and attacks, and mitigation controls.  We will have several case studies in current CPS/IoT systems and students will assess the health, safety, privacy, and economic impacts of IoT security events. Also, students will need to review research papers related to course topics and present a final project report at the end of the course.", "prerequisites": "Prerequisite(s): CS 450", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 558", "title": "Advanced Computer Security", "description": "This course will teach various modern topics in network and computer security.  It will provide a thorough grounding in cyber-security for students who are interested in conducting research on security and networking and for students who are more broadly interested in real-world security issues and techniques.  Students will undertake a semester-long research project with the goal of technical publications.  Lecture topics will include, but not limited to:  (1) Unwanted traffic, such as denial of service (DoS), and spam; (2) Malware, such as botnet, worm, and virus; (3) Network configuration and defense, such as firewall, access control, and intrusion detection systems; (4) Cyber physical system security, such as critical infrastructure protection (e.g., smart grid); and (5) Hot topics, such as software-defined networking (SDN), network verification, data center and enterprise network security, web security and more.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C or CS 455 with min. grade of C or CS 458 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 559", "title": "Biometrics", "description": "In a security conscious society, biometrics-based authentication and identification have become a central focus for many important applications as biometrics can provide accurate and reliable identification.  Biometrics research and technology continue to mature rapidly, driven by pressing industrial and government needs and supported by industrial and government funding.  This course offers an introduction to major biometric techniques, the underlying pattern recognition and computer vision basis for these biometrics, scientific testing and evaluation methodologies of biometrics systems, a deeper study of facial recognition, and an examination of the current privacy and social/ethical issues surrounding the technology.  The course includes readings from the literature, short writing assignments, and practical experience with current biometric technology. Prerequisite working knowledge of Matlab or C/C++ is necessary.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 560", "title": "Computer Science in the Classroom", "description": "Emphasis on how to organize a selected computer science course.  Discussion of what to teach, the problems typically encountered in teaching, and how to best organize the concepts in a computer science course.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 561", "title": "The Computer and Curriculum Content", "description": "Presentation techniques from white board to web-based instructional units using currently available software.  Emphasis on incorporating the computer as a teaching tool in the presentation of class material.  Single Concept Learning Modules (SCLM) are developed.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 562", "title": "Virtual Machines", "description": "This is an advanced systems course which introduces the internals of modern virtualization software and hardware, from full system emulators, binary translators, and high-level language virtual machines to hypervisors, lightweight virtualization mechanisms such as containers, and hardware virtualization extensions.  Students will learn the key abstractions and mechanisms that underly resource virtualization by building significant components of real-world systems.", "prerequisites": "Prerequisite(s): CS 450 with min. grade of C or CS 551 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 565", "title": "Computer Assisted Instruction", "description": "Hardware and software for the effective use of the computer in an educational environment, CAI (Computer-Assisted/Aided Instruction) being one of the major areas of investigation .", "prerequisites": "Prerequisite(s): CS 560 with min. grade of C or CS 561 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 566", "title": "Practicum in the Application of Computers to Education", "description": "Provides supervised experience in the development of computer-based teaching units.  Evaluation of different theoretical and/or technical approaches to the use of computer in the classroom.", "prerequisites": "Prerequisite(s): CS 561 with min. grade of C and CS 560 with min. grade of C", "lecture": "Lecture: 1", "lab": "Lab: 4", "credits": "Credits: 3"},
{"code": "CS 570", "title": "Advanced Computer Architecture", "description": "Computer system design and architecture such as pipelining and instruction-level parallelism, memory-hierarchy system, interconnection networks, multicore and multiprocessors, and storage architecture.  Selected study on current experimental computer systems.", "prerequisites": "Prerequisite(s): CS 470 with min. grade of C and CS 450 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 572", "title": "Advanced Topics in Computer Architecture", "description": "Current problems in computer architecture.", "prerequisites": "Prerequisite(s): CS 570 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 577", "title": "Deep Learning", "description": "Deep neural networks form an important sub-field of machine learning that is responsible for much of the progress in in cognitive computing in recent years in areas of computer vision, audio processing, and natural language processing. Deep networks can be trained with a single end-to-end model and bypass the need for traditional task-specific feature engineering. In this way deep learning simplifies learning tasks and allows using developed models to new tasks. Deep networks are suitable for parallel processing implementations and can easily leverage intensive computational resources. The course will focus on mathematical concepts, numerical algorithms, principles, GPU frameworks, and applications of deep learning. Topics include deep feedforward networks, convolutional networks, sequence modeling, transformers, and deep generative models with applications to data analysis, computer vision, and natural language processing. Several programming assignments and a project will practice the application of deep learning techniques to actual problems. The course requires sufficient math and programming background but does not require prior knowledge in machine learning.", "prerequisites": "Prerequisite(s): CS 430", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 578", "title": "Interactive and Transparent Machine Learning", "description": "This course will discuss how we can enable humans and machine learning systems to interact and collaborate for more effective and accurate decision making.  Topics include, but are not limited to, expert systems, recommender systems, active learning, crowdsourcing, learning with rationales, interactive machine learning, and transparency.  Students are expected to delve deep into the assumptions, mathematical formulations, and algorithmic optimizations of various machine learning algorithms, read several academic papers, analyze numerous datasets, inspect implicit and explicit biases present in the analytical processes, and build an interactive and transparent machine learning system.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C and CS 422 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 579", "title": "Online Social Network Analysis", "description": "This course will explore the latest algorithms for analyzing online social networks, considering both their structure and content.  Fundamentals of social graph theory will be covered including distance, search, influence, community discovery, diffusion, and graph dynamics.  Fundamentals of text analysis will also be covered with an emphasis on the type of text used in online social networks and common applications.  Topics include sentiment classification, information extraction, clustering, and topic modeling.  Emphasis will be placed on the application of this technology to areas such as public health, crisis response, politics, and marketing.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 580", "title": "Topics in Machine Learning", "description": "This course covers advanced topics in machine learning.  The exact course contents may change based on recent advances in the area and the instructor teaching it.  Possible topics include active learning, reinforcement learning, online learning, non-parametric learning, inductive learning, statistical relational learning, dimensionality reduction, ensemble methods, transfer learning, outlier detection, specific application areas of machine learning, and other relevant and/or emerging topics.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 581", "title": "Advanced Artificial Intelligence", "description": "Covers advanced topics in artificial intelligence. Topics include search and optimization, simulated annealing, evolutionary algorithms, gradient optimization, constraint optimization, A* search, alpha-beta search, Monte Carlo tree search, probabilistic reasoning, Bayesian networks, hidden Markov models, Kalman filters, decision-making under uncertainty, influence diagrams, Markov decision processes, bandit problems, supervised learning, classification, deep learning, reinforcement learning, knowledge representation, propositional and first-order logic, ontological engineering, AI ethics and safety, privacy, bias and fairness in machine learning, and explainable AI.", "prerequisites": "Prerequisite(s): CS 480 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 582", "title": "Computational Robotics", "description": "Covers basic algorithms and techniques used in Computational Robotics, to give the student a good basis for work in this highly relevant field. Topics include: Locomotion, Non-visual sensors and algorithms, Uncertainty modeling, data fusion, State space models, Kalman filtering, Visual sensor, Sampling theory, Image features, Depth reconstruction, Multiple view geometry, Ego-motion, Active vision, Reasoning, Spatial decomposition, Geometric representations, Topological representations, Path planning, Spatial uncertainty, Active control, Pose maintenance, Dead reckoning, Correlation-based localization, Sensorial maps, Task planning and task interference, Multi-agent coordination.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 583", "title": "Probabilistic Graphical Models", "description": "This course will cover probabilistic graphical models -- powerful and interpretable models for reasoning under uncertainty.  The generic families of models such as directed, undirected, and factor graphs as well as specific representations such as hidden Markov models and conditional random fields will be discussed.  The discussions will include both the theoretical aspects of representation, learning, and inference, and their applications in many interesting fields such as computer vision, natural language processing, computational biology, and medical diagnosis.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 584", "title": "Machine Learning", "description": "Introduce fundamental problems in machine learning.  Provide understanding of techniques, mathematical concepts, and algorithms used in machine learning.  Provide understanding of the limitations of various machine learning algorithms and the way to evaluate performance of learning algorithms.  Topics include introduction, regression, kernel methods, generative learning, discriminative learning, neural networks, support vector machines, graphical models, unsupervised learning, and dimensionality reduction.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 585", "title": "Natural Language Processing", "description": "An introduction to the problems of computing with human languages. Parsing. Semantic representations. Text generation. Lexicography. Discourse. Sublanguage studies. Applications to CAI, database interfaces and information retrieval.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 586", "title": "Software Systems Architectures", "description": "This course covers the state-of-the-art in architectural design of complex software systems. The course considers commonly-used software system architectures, techniques for designing and implementing these architectures, models and notations for characterizing and reasoning about architectures, and case studies of actual software system architectures.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 587", "title": "Software Project Management", "description": "Concepts of software product and process quality. Role of TQM in software project management. Use of metrics, feasibility studies, cost and effort estimates. Discussion of project planning and scheduling. The project team and leadership issues. The Capability Maturity Model: basic tenets and application of process evaluation.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 588", "title": "Advanced Software Engineering Development", "description": "Software development process improvement is a major objective of this course. This is achieved through a series of individual programming and process projects. Students learn to plan their projects, apply measurements, estimate size, schedule tasks, and classify defects in order to improve the quality of both their development process and their software products.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 589", "title": "Software Testing and Analysis", "description": "Concepts and techniques for testing and analysis of software. Software testing at the unit, subsystem, and system levels. Specification-based testing. Code-based testing. Model-based testing. Methods for test generation and validation. Static and dynamic analysis. Formal methods and verification. Reliability analysis.", "prerequisites": "Prerequisite(s): CS 331 with min. grade of B or (CS 487 with min. grade of B and CS 401 with min. grade of B)", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 590", "title": "Seminar in Computer Science", "description": "Investigation and discussion by faculty and students concentrated on some topic of current interest. May be taken more than once.  Prerequisite: Instructor permission required.", "prerequisites": "", "lecture": "Lecture: 0", "lab": "Lab: 3", "credits": "Credits: 3"},
{"code": "CS 612", "title": "Topics in Computer Vision", "description": "Covers advanced topics in computer vision to enhance knowledge of students interested in this highly important area. The topics in this course may change between semesters depending on the instructor teaching the course and the current state of the art in this area. Possible topics include: Image based modeling and rendering, Multiple view geometry, Auto-calibration, Object recognition, Motion analysis, Tracking, Perceptual user interfaces, Face and gesture recognition, Active vision.", "prerequisites": "Prerequisite(s): CS 512 with min. grade of C", "lecture": "Lecture: 0", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 630", "title": "Advanced Topics in Algorithms", "description": "Theoretical analysis of various types of algorithms. Topics vary, and may include approximation, quantum, on-line, distributed, randomized, and parallel algorithms.  Requires CS 430. Instructor permission required.", "prerequisites": "Prerequisite(s): CS 430 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 642", "title": "Advanced Topics in Networking", "description": "Introduction to advanced networking research. A particular focus area will be considered, keeping current with advances in computer networking. Quantitative methods will be emphasized.", "prerequisites": "Prerequisite(s): CS 542 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 681", "title": "Topics in Computational Linguistics", "description": "CS 585 Covers various topics in linguistics as they may be applied to various computational problems in AI, NLP, or IR. The topics in this course may change between semesters depending on the instructor teaching the course and the current state of the art in this area. Possible topics include: Systemic Functional Linguistics, Clausal structure, Group structure, Complex structure, Cognitive Linguistics, Process semantics.", "prerequisites": "Prerequisite(s): CS 585 with min. grade of C", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 689", "title": "Advanced Topics in Software Engineering", "description": "Course content is variable and reflects the current trends in software engineering.  Instructor permission required.", "prerequisites": "", "lecture": "Lecture: 3", "lab": "Lab: 0", "credits": "Credits: 3"},
{"code": "CS 695", "title": "Doctoral Seminar", "description": "Doctoral seminar.", "prerequisites": "", "lecture": "Lecture: 0", "lab": "Lab: 1", "credits": "Credits: 1"},
{"code": "CS 725", "title": "Introduction to Relational Databases", "description": "Overview of database architectures, including the Relational, Hierarchical, Network, and Object Models. Database interfaces, including relational algebra and the SQL query language. (Coursera)", "prerequisites": "", "lecture": "Lecture: 1", "lab": "Lab: 0", "credits": "Credits: 1"},
{"code": "CS 726", "title": "Relational Database Design", "description": "Fundamentals of relational database design.  Entity-Relationship diagrams, UML, and design principles. Normal forms and functional dependencies.", "prerequisites": "", "lecture": "Lecture: 1", "lab": "Lab: 0", "credits": "Credits: 1"},
{"code": "CS 727", "title": "Relational Database Implementation and Application", "description": "Accessing SQL from traditional programming languages. Functions, procedures, and triggers. Transactions and concurrency models. Database storage and indexing.", "prerequisites": "", "lecture": "Lecture: 1", "lab": "Lab: 0", "credits": "Credits: 1"},
{"code": "CS 750", "title": "Computer Aided Software Engineering", "description": "This course presents the state-of-the-art of computer-aided software engineering technologies. CASE encompasses a collection of automated tools and methods that provide automated support to the software specification, design, development, testing, maintenance, and management of large and complex software systems. Students will develop working understanding of CASE methodologies and tools.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 2", "lab": "Lab: 0", "credits": "Credits: 2"},
{"code": "CS 763", "title": "Automated Software Testing", "description": "This course will examine both the state-of-the-art and the state-of-practice in automated software testing on a system level and an unit level. Relevant issues include theoretical foundations of automated testing, automation tools and techniques, empirical studies and industrial experience. Key topics include, but are not limited to: Fundamentals of automated software testing, automated test design, modeling and generation, automated test execution, automated test management, automated test metrics, automated tools, automated feature and regression testing Environments to support cost-effective automated software testing, discussions on the barriers to industrial use of automated testing.", "prerequisites": "Prerequisite(s): CS 487 with min. grade of C", "lecture": "Lecture: 2", "lab": "Lab: 0", "credits": "Credits: 2"}
]